<?xml version="1.0" encoding="UTF-8" ?>
<doc>
<title>Scripts</title>
<desc>
　Scripts クラスは TJS2 に関するメソッドやプロパティを管理します。このクラスからオブジェクトを作成することはできません。<r/>
</desc>

<member>
	<name>execStorage</name>
	<type>method</type>
	<shortdesc>ストレージ上のスクリプトの実行</shortdesc>
	<arg>
		<argitem>
			<name>storage</name>
			<default></default>
			<desc>
				　実行するストレージを指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>mode</name>
			<default>''</default>
			<desc>
				　ファイルを読み込む際のモード文字列を指定します。"o" に続いてオフセットを10進で指定するとファイルのそのバイト位置からの読み込みになります。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>context</name>
			<default>global</default>
			<desc>
				　実行コンテキストを指定します。<r/>
			</desc>
		</argitem>
	</arg>
	<result>スクリプトを実行した結果が戻ります。</result>
	<desc>
		　指定されたストレージを読み込み、その内容を TJS2 スクリプトとして実行します。<r/>
		　スクリプトを実行中に発生した例外はこのメソッド内では捕捉されませんので、このメソッドの
		呼び出し側で捕捉することができます。<r/>
	</desc>
	<ref>Scripts.evalStorage</ref>
</member>

<member>
	<name>evalStorage</name>
	<type>method</type>
	<shortdesc>ストレージ上の式の評価</shortdesc>
	<arg>
		<argitem>
			<name>storage</name>
			<default></default>
			<desc>
				　評価するストレージを指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>mode</name>
			<default>''</default>
			<desc>
				　ファイルを読み込む際のモード文字列を指定します。"o" に続いてオフセットを10進で指定するとファイルのそのバイト位置からの読み込みになります。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>context</name>
			<default>global</default>
			<desc>
				　実行コンテキストを指定します。<r/>
			</desc>
		</argitem>
	</arg>
	<result>式を評価した結果が戻ります。</result>
	<desc>
		　指定されたストレージを読み込み、その内容を TJS2 式として評価します。<r/>
		　スクリプトを実行中に発生した例外はこのメソッド内では捕捉されませんので、このメソッドの
		呼び出し側で捕捉することができます。<r/>
	</desc>
	<ref>Scripts.execStorage</ref>
</member>

<member>
	<name>compileStorage</name>
	<type>method</type>
	<shortdesc>ストレージ上のスクリプトのコンパイル</shortdesc>
	<arg>
		<argitem>
			<name>inputfile</name>
			<default></default>
			<desc>
				　コンパイル対象ストレージを指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>outputfile</name>
			<default></default>
			<desc>
				　出力バイトコードストレージを指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>isresult</name>
			<default>false</default>
			<desc>
				　戻り値が必要かどうかを指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>outputdebug</name>
			<default>false</default>
			<desc>
				　デバッグ情報を含めるかどうかを指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>isexpression</name>
			<default>false</default>
			<desc>
				　式かどうかを指定します。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　指定されたストレージを読み込み、その内容をコンパイルしてバイトコードファイルとして出力します。<r/>
		　コンパイルされたバイトコードファイルは execStorage もしくは、evalStorage で通常のスクリプトと同じように実行できます。<r/>
	</desc>
	<ref>Scripts.execStorage</ref>
	<ref>Scripts.evalStorage</ref>
</member>

<member>
	<name>exec</name>
	<type>method</type>
	<shortdesc>スクリプトの実行</shortdesc>
	<arg>
		<argitem>
			<name>script</name>
			<default></default>
			<desc>
				　実行するスクリプトを文字列で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>name</name>
			<default>''</default>
			<desc>
				　エラーメッセージ用ファイル名の指定
			</desc>
		</argitem>
		<argitem>
			<name>linesof</name>
			<default>0</default>
			<desc>
				　エラーメッセージ用行番号の指定
			</desc>
		</argitem>
		<argitem>
			<name>context</name>
			<default>global</default>
			<desc>
				　実行コンテキストを指定します。<r/>
			</desc>
		</argitem>
	</arg>
	<result>スクリプトを実行した結果が戻ります。</result>
	<desc>
		　script で指定された文字列を TJS2 スクリプトとして実行します。<r/>
		　スクリプトを実行中に発生した例外はこのメソッド内では捕捉されませんので、このメソッドの
		呼び出し側で捕捉することができます。<r/>
	</desc>
	<ref>Scripts.execStorage</ref>
	<ref>Scripts.eval</ref>
</member>

<member>
	<name>eval</name>
	<type>method</type>
	<shortdesc>式の評価</shortdesc>
	<arg>
		<argitem>
			<name>expression</name>
			<default></default>
			<desc>
				　実行する式を文字列で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>name</name>
			<default>''</default>
			<desc>
				　エラーメッセージ用ファイル名の指定
			</desc>
		</argitem>
		<argitem>
			<name>linesof</name>
			<default>0</default>
			<desc>
				　エラーメッセージ用行番号の指定
			</desc>
		</argitem>
		<argitem>
			<name>context</name>
			<default>global</default>
			<desc>
				　実行コンテキストを指定します。<r/>
			</desc>
		</argitem>
	</arg>
	<result>式を評価した結果が戻ります。</result>
	<desc>
		　expression で指定された文字列を TJS2 式として実行します。<r/>
		　スクリプトを実行中に発生した例外はこのメソッド内では捕捉されませんので、このメソッドの
		呼び出し側で捕捉することができます。<r/>
	</desc>
	<ref>Scripts.execStorage</ref>
	<ref>Scripts.exec</ref>
</member>

<member>
	<name>dump</name>
	<type>method</type>
	<shortdesc>コンテキストのダンプ</shortdesc>
	<arg></arg>
	<result></result>
	<desc>
		　現時点で TJS2 に読み込まれているスクリプトブロック内の各コンテキストの内容の詳細を
		ローカルファイルに出力します。主に VM コードの逆アセンブル結果が出力されます。<r/>
		　出力ファイルは、吉里吉里の実行可能ファイルと同じフォルダに出力され、そのファイル名は
		吉里吉里の実行可能ファイルに .dump.txt が付加されたものになります。<r/>
	</desc>
</member>

<member>
	<name>getTraceString</name>
	<type>method</type>
	<shortdesc>呼び出し履歴の取得</shortdesc>
	<arg>
		<argitem>
			<name>limit</name>
			<default>0</default>
			<desc>
				　履歴を取得する最大呼び出し深さを指定します。この引数を省略するか 0 を指定すると、取得できる限りの履歴を取得します。<r/>
			</desc>
		</argitem>
	</arg>
	<result>呼び出し履歴を文字列化した物</result>
	<desc>
		　メソッドの呼び出し履歴を文字列として取得します。このメソッドが呼ばれた時点での履歴を取得することができます。<r/>
		　このメソッドを使用するには、コマンドラインオプションで -debug (デバッグモード) が有効になっていなければなりません。デバッグモードが無効の場合はこのメソッドは空文字列を返します。<r/>
		　返される文字列はたとえば 'messagelayer.tjs(1561)[(function) addButton] &lt;-- mainwindow.tjs(4463)[(function expression) (anonymous)] &lt;-- conductor.tjs(427)[(function) onTag] &lt;-- conductor.tjs(95)[(function) timerCallback]' のような物です。
	</desc>
</member>

<member>
	<name>setCallMissing</name>
	<type>method</type>
	<shortdesc>メンバが見つからない時に呼び出されるハンドラの登録</shortdesc>
	<arg>
		<argitem>
			<name>missing</name>
			<default></default>
			<desc>
				　メンバが見つからない時に呼び出されるハンドラ。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　メンバが見つからない時に呼び出されるハンドラを登録します。<r/>
	</desc>
</member>

<member>
	<name>getClassNames</name>
	<type>method</type>
	<shortdesc>クラス名を取得</shortdesc>
	<arg>
		<argitem>
			<name>obect</name>
			<default></default>
			<desc>
				　クラス名を取得するオブジェクト。<r/>
			</desc>
		</argitem>
	</arg>
	<result>クラス名の配列</result>
	<desc>
		　オブジェクトからクラス名を取得します。<r/>
	</desc>
</member>

<member>
	<name>textEncoding</name>
	<type>property</type>
	<shortdesc>スクリプトを読み込む時に使用するテキストエンコーディングを指定</shortdesc>
	<access>r/w</access>
	<desc>
		　スクリプトを読み込む時に使用するテキストエンコーディングを指定します。<r/>
		　現在指定できるのは"UTF-8"か"Shift_JIS"のどちらかです。<r/>
	</desc>
</member>

</doc>
