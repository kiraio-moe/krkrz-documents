<?xml version="1.0" encoding="UTF-8" ?>
<doc>
<title>Scripts</title>
<desc>
　The Scripts class manages the methods and properties related to TJS2. Objects cannot be created from this class.<r/>
</desc>

<member>
	<name>execStorage</name>
	<type>method</type>
	<shortdesc>Running scripts on storage</shortdesc>
	<arg>
		<argitem>
			<name>storage</name>
			<default></default>
			<desc>
				　Specify the storage to execute.<r/>
			</desc>
		</argitem>
		<argitem>
			<name>mode</name>
			<default>''</default>
			<desc>
				　Specify the mode string when reading the file. Specifying an offset following the "o" in decimal will cause the file to be read from that byte position.<r/>
			</desc>
		</argitem>
		<argitem>
			<name>context</name>
			<default>global</default>
			<desc>
				　Specify the execution context.<r/>
			</desc>
		</argitem>
	</arg>
	<result>Returns the result of running the script.</result>
	<desc>
		　Reads the specified storage and executes the contents as a TJS2 script.<r/>
		　Exceptions that occur during script execution are not caught in this method and can be caught by the caller of this method.<r/>
	</desc>
	<ref>Scripts.evalStorage</ref>
</member>

<member>
	<name>evalStorage</name>
	<type>method</type>
	<shortdesc>Evaluating expressions on storage</shortdesc>
	<arg>
		<argitem>
			<name>storage</name>
			<default></default>
			<desc>
				　Specify the storage to evaluate.<r/>
			</desc>
		</argitem>
		<argitem>
			<name>mode</name>
			<default>''</default>
			<desc>
				　Specify the mode string when reading the file. Specifying an offset following the "o" in decimal will cause the file to be read from that byte position.<r/>
			</desc>
		</argitem>
		<argitem>
			<name>context</name>
			<default>global</default>
			<desc>
				　Specify the execution context.<r/>
			</desc>
		</argitem>
	</arg>
	<result>Returns the result of evaluating the expression.</result>
	<desc>
		　Reads the specified storage and evaluates its contents as a TJS2 expression.<r/>
		　Exceptions that occur during script execution are not caught in this method and can be caught by the caller of this method.<r/>
	</desc>
	<ref>Scripts.execStorage</ref>
</member>

<member>
	<name>compileStorage</name>
	<type>method</type>
	<shortdesc>Compile scripts on storage</shortdesc>
	<arg>
		<argitem>
			<name>inputfile</name>
			<default></default>
			<desc>
				　Specify the storage to be compiled.<r/>
			</desc>
		</argitem>
		<argitem>
			<name>outputfile</name>
			<default></default>
			<desc>
				　Specifies output bytecode storage.<r/>
			</desc>
		</argitem>
		<argitem>
			<name>isresult</name>
			<default>false</default>
			<desc>
				　Specifies whether a return value is required.<r/>
			</desc>
		</argitem>
		<argitem>
			<name>outputdebug</name>
			<default>false</default>
			<desc>
				　Specifies whether to include debug information.<r/>
			</desc>
		</argitem>
		<argitem>
			<name>isexpression</name>
			<default>false</default>
			<desc>
				　Specify whether this is an expression.<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　Reads the specified storage, compiles its contents, and outputs it as a bytecode file.<r/>
		　The compiled bytecode file can be executed with execStorage or evalStorage in the same way as a normal script.<r/>
	</desc>
	<ref>Scripts.execStorage</ref>
	<ref>Scripts.evalStorage</ref>
</member>

<member>
	<name>exec</name>
	<type>method</type>
	<shortdesc>Run the script</shortdesc>
	<arg>
		<argitem>
			<name>script</name>
			<default></default>
			<desc>
				　Specify the script to be executed as a character string.<r/>
			</desc>
		</argitem>
		<argitem>
			<name>name</name>
			<default>''</default>
			<desc>
				　Specifying the file name for error messages
			</desc>
		</argitem>
		<argitem>
			<name>linesof</name>
			<default>0</default>
			<desc>
				　Specify line number for error message
			</desc>
		</argitem>
		<argitem>
			<name>context</name>
			<default>global</default>
			<desc>
				　Specify the execution context.<r/>
			</desc>
		</argitem>
	</arg>
	<result>Returns the result of running the script.</result>
	<desc>
		　Executes the character string specified by script as a TJS2 script.<r/>
		　Exceptions that occur during script execution are not caught in this method and can be caught by the caller of this method.<r/>
	</desc>
	<ref>Scripts.execStorage</ref>
	<ref>Scripts.eval</ref>
</member>

<member>
	<name>eval</name>
	<type>method</type>
	<shortdesc>Expression evaluation</shortdesc>
	<arg>
		<argitem>
			<name>expression</name>
			<default></default>
			<desc>
				　Specify the expression to be executed as a character string.<r/>
			</desc>
		</argitem>
		<argitem>
			<name>name</name>
			<default>''</default>
			<desc>
				　Specifying the file name for error messages
			</desc>
		</argitem>
		<argitem>
			<name>linesof</name>
			<default>0</default>
			<desc>
				　Specify line number for error message
			</desc>
		</argitem>
		<argitem>
			<name>context</name>
			<default>global</default>
			<desc>
				　Specify the execution context.<r/>
			</desc>
		</argitem>
	</arg>
	<result>Returns the result of evaluating the expression.</result>
	<desc>
		　Executes the string specified by expression as a TJS2 expression.<r/>
		　Exceptions that occur during script execution are not caught in this method and can be caught by the caller of this method.<r/>
	</desc>
	<ref>Scripts.execStorage</ref>
	<ref>Scripts.exec</ref>
</member>

<member>
	<name>dump</name>
	<type>method</type>
	<shortdesc>Dump context</shortdesc>
	<arg></arg>
	<result></result>
	<desc>
		　Outputs the details of the contents of each context in the script block currently loaded in TJS2 to a local file. Mainly outputs the disassembly result of VM code.<r/>
		　The output file is output to the same folder as the Kirikiri executable file, and the file name is the Kirikiri executable file with .dump.txt appended.<r/>
	</desc>
</member>

<member>
	<name>getTraceString</name>
	<type>method</type>
	<shortdesc>Get call stack</shortdesc>
	<arg>
		<argitem>
			<name>limit</name>
			<default>0</default>
			<desc>
				　Specify the maximum call depth to get the history. If you omit this argument or specify 0, the history is retrieved as much as possible.<r/>
			</desc>
		</argitem>
	</arg>
	<result>String of call history</result>
	<desc>
		　Get the call history of the method as a string. You can get the history at the time this method is called.<r/>
		　To use this method, -debug (debug mode) must be enabled in the command line option. This method returns an empty string if debug mode is disabled.<r/>
		　The returned string is something like 'messagelayer.tjs(1561)[(function) addButton] &lt;-- mainwindow.tjs(4463)[(function expression) (anonymous)] &lt;-- conductor.tjs(427)[(function) onTag] &lt;-- conductor.tjs(95)[(function) timerCallback]', for example.
	</desc>
</member>

<member>
	<name>setCallMissing</name>
	<type>method</type>
	<shortdesc>Register a handler to be called when a member is not found</shortdesc>
	<arg>
		<argitem>
			<name>missing</name>
			<default></default>
			<desc>
				　Handler called when a member is not found.<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　Register a handler to be called when a member is not found.<r/>
	</desc>
</member>

<member>
	<name>getClassNames</name>
	<type>method</type>
	<shortdesc>Get class name</shortdesc>
	<arg>
		<argitem>
			<name>obect</name>
			<default></default>
			<desc>
				　Object for which to get the class name.<r/>
			</desc>
		</argitem>
	</arg>
	<result>Array of class names</result>
	<desc>
		　Get the class name from the object.<r/>
	</desc>
</member>

<member>
	<name>textEncoding</name>
	<type>property</type>
	<shortdesc>Specify the text encoding to use when loading the script</shortdesc>
	<access>r/w</access>
	<desc>
		　Specify the text encoding to use when loading the script.<r/>
		　Currently, you can specify either "UTF-8" or "Shift_JIS".<r/>
	</desc>
</member>

</doc>
