<?xml version="1.0" encoding="UTF-8" ?>
<doc>
<title>Storages</title>
<desc>
　The Storages class is a class with methods and properties related to the <kw>storage system</kw> of Kirikiri. Objects cannot be created from this class.<r/>
</desc>

<member>
	<name>addAutoPath</name>
	<type>method</type>
	<shortdesc>Add to automatic search path</shortdesc>
	<arg>
		<argitem>
			<name>path</name>
			<default></default>
			<desc>
				　Specify the path to be added to the automatic search path.<r/>
				　The path must end with '&gt;' to specify the root folder in the archive, or '/' to specify a regular folder (eg <tt>"Archive/arc.xp3&gt;"</tt> or <tt>"System/"</tt>).<r/>
				　Starting with 2.19 beta 14, the archive delimiter has changed from '#' to '&gt;'.<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　Adds the specified path to the <kw>automatic search path</kw>. When searching for available storage, Kirikiri looks for a path registered in this automatic search path.<r/>
		　For the automatic search path, the one specified later is given higher priority.<r/>
		　The project folder is searched with the highest priority.<r/>
	</desc>
	<ref>Storages.removeAutoPath</ref>
</member>

<member>
	<name>removeAutoPath</name>
	<type>method</type>
	<shortdesc>Delete automatic search path</shortdesc>
	<arg>
		<argitem>
			<name>path</name>
			<default></default>
			<desc>
				　Specify the path to be deleted from automatic search.<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　Deletes the specified path from the automatic search path.<r/>
	</desc>
	<ref>Storages.addAutoPath</ref>
</member>

<member>
	<name>getFullPath</name>
	<type>method</type>
	<shortdesc>Get the complete unified storage name</shortdesc>
	<arg>
		<argitem>
			<name>path</name>
			<default></default>
			<desc>
				　Specify the storage name that you want to be a complete unified storage name.<r/>
			</desc>
		</argitem>
	</arg>
	<result>Complete unified storage name</result>
	<desc>
		　Converts the storage name specified by path to a complete <kw>unified storage name</kw>.<r/>
		　All redundant path accesses (for example, <tt>system/flags/../data/</tt>) are compressed.<r/>
		　Complements if the current media and current folder are not specified.<r/>
	</desc>
	<ref>Storages.getPlacedPath</ref>
</member>

<member>
	<name>getPlacedPath</name>
	<type>method</type>
	<shortdesc>Search for storage</shortdesc>
	<arg>
		<argitem>
			<name>storage</name>
			<default></default>
			<desc>
				　Specify the storage name you want to search.<r/>
			</desc>
		</argitem>
	</arg>
	<result>The found location is returned with the unified storage name. If not found, an empty string is returned.</result>
	<desc>
		　Searches the storage specified by storage from the <kw>automatic search path</kw>.<r/>
	</desc>
	<ref>Storages.getFullPath</ref>
	<ref>Storages.isExistentStorage</ref>
</member>

<member>
	<name>isExistentStorage</name>
	<type>method</type>
	<shortdesc>Checking the existence of storage</shortdesc>
	<arg>
		<argitem>
			<name>storage</name>
			<default></default>
			<desc>
				　Specify the storage name whose existence you want to check.<r/>
			</desc>
		</argitem>
	</arg>
	<result>Returns true if it can be confirmed, otherwise returns false.</result>
	<desc>
		　Checks whether the storage specified by storage exists. Faster than using getPlacedPath.<r/>
	</desc>
	<ref>Storages.getPlacedPath</ref>
</member>

<member>
	<name>extractStorageExt</name>
	<type>method</type>
	<shortdesc>Extract storage name extension</shortdesc>
	<arg>
		<argitem>
			<name>storage</name>
			<default></default>
			<desc>
				　Specify the storage name from which you want to extract the extension part.<r/>
			</desc>
		</argitem>
	</arg>
	<result>The extension part is returned. The extension part also includes <tt>.</tt> (dot). If there is no extension, an empty string is returned.</result>
	<desc>
		　Extracts and returns the extension part from the specified storage name.<r/>
	</desc>
	<ref>Storages.extractStorageName</ref>
	<ref>Storages.extractStoragePath</ref>
	<ref>Storages.chopStorageExt</ref>
</member>

<member>
	<name>extractStorageName</name>
	<type>method</type>
	<shortdesc>Extract storage name</shortdesc>
	<arg>
		<argitem>
			<name>storage</name>
			<default></default>
			<desc>
				　Specify the storage name from which you want to extract the storage name.<r/>
			</desc>
		</argitem>
	</arg>
	<result>Returns the storage name. If there is no storage name, an empty string is returned.</result>
	<desc>
		　Extracts and returns the storage name part (excluding the path) from the specified storage name.<r/>
		　For example, if you pass <tt>"System/hoge.txt"</tt>, <tt>"hoge.txt"</tt> is returned.<r/>
	</desc>
	<ref>Storages.extractStorageExt</ref>
	<ref>Storages.extractStoragePath</ref>
</member>

<member>
	<name>extractStoragePath</name>
	<type>method</type>
	<shortdesc>Extract path of storage name</shortdesc>
	<arg>
		<argitem>
			<name>storage</name>
			<default></default>
			<desc>
				　Specify the storage name from which you want to extract the path.<r/>
			</desc>
		</argitem>
	</arg>
	<result>The path will be returned. If there is no path, an empty string is returned.</result>
	<desc>
		　Extracts and returns the path part from the specified storage name.<r/>
		　For example, if you pass <tt>"file://home/dee/hoge.txt"</tt>, <tt>"file://home/dee/"</tt> is returned.<r/>
	</desc>
	<ref>Storages.extractStorageExt</ref>
	<ref>Storages.extractStorageName</ref>
</member>

<member>
	<name>chopStorageExt</name>
	<type>method</type>
	<shortdesc>Truncation of storage name extension</shortdesc>
	<arg>
		<argitem>
			<name>storage</name>
			<default></default>
			<desc>
				　Specify the storage name whose extension you want to cut off.<r/>
			</desc>
		</argitem>
	</arg>
	<result>The storage name with the extension part cut off is returned.</result>
	<desc>
		　Returns the specified storage name with the extension part cut off.<r/>
		　For example, if you pass <tt>"file://home/dee/hoge.txt"</tt>, <tt>"file://home/dee/hoge"</tt> is returned.
	</desc>
	<ref>Storages.extractStorageExt</ref>
</member>


<member>
	<name>searchCD</name>
	<type>method</type>
	<shortdesc>Search CD</shortdesc>
	<arg>
		<argitem>
			<name>volume</name>
			<default></default>
			<desc>
				　Specify the volume label of the CD to be searched.<r/>
			</desc>
		</argitem>
	</arg>
	<result>The drive letter of the found CD-ROM drive is returned.</result>
	<desc>
		　Searches for a CD drive with the specified volume label and returns its drive letter (such as 'H').<r/>
		　Of course, the appropriate CD-ROM must be inserted in the drive.<r/>
	</desc>
</member>

<member>
	<name>getLocalName</name>
	<type>method</type>
	<shortdesc>Get local file name</shortdesc>
	<arg>
		<argitem>
			<name>path</name>
			<default></default>
			<desc>
				　Specify the unified storage name that you want to convert to a <kw>local file name</kw>.<r/>
			</desc>
		</argitem>
	</arg>
	<result>Returns the local file name. If it cannot be converted to a local file name, a null character is returned or an exception occurs.</result>
	<desc>
		　Converts the specified unified storage name to the OS native format (local file name) and returns it.<r/>
	</desc>
</member>

<member>
	<name>selectFile</name>
	<type>method</type>
	<shortdesc>Show file selection dialog box</shortdesc>
	<arg>
		<argitem>
			<name>params</name>
			<default></default>
			<desc>
				　Specify the dictionary array used for data transfer.<r/>
				　When passing to this method, you can specify the following members: Also, some members will change value after this method ends.<r/>
				<r/>
				<dl>
				<dt><kw>filter</kw></dt>
				<dd>
					　Pass the filter string as an array.<r/>
					　The filter string specifies the description of the filter and the filter separated by | (vertical bar), and specifies a wildcard for the filter. If multiple extensions correspond to one filter, separate them with; (single-byte semicolon).<r/>
					　To specify multiple filters, specify them in an array.<r/>
					　If omitted, no filter is used.<r/>
					<r/>
					Example:<r/>
					<tt><nobr>["Image file (*.bmp;*.png;*.jpg;*.jpeg;*.eri;*.tlg)|*.bmp;*.png;*.jpg;*.jpeg;*.eri;*.tlg", </nobr></tt><r/>
					<tt><nobr> "Script file (*.tjs;*.ks)|*.tjs;*.ks"]</nobr></tt><r/>
				</dd>
				<r/>
				<dt><kw>filterIndex</kw></dt>
				<dd>
					　Specify the number of the selected filter (specified by filter).<r/>
					　If 1 is specified, the first filter specified by filter is initially selected. Specifying 2 causes the second filter to be selected (note that this is not a zero-based index; the first is 1).<r/>
					　If omitted, the first filter is selected.<r/>
					　Also, if the user presses the OK button, this member will be set to the index of the last filter selected in the dialog box.<r/>
				</dd>
				<r/>
				<dt><kw>name</kw></dt>
				<dd>
					　Specify a file name. By omitting or specifying an empty string, no files can be selected in the initial state.<r/>
					　Also, if the user presses the OK button, the selected file will be set to this member.<r/>
				</dd>
				<r/>
				<dt><kw>initialDir</kw></dt>
				<dd>
					　Specify the folder to be displayed in the initial state.<r/>
					　If omitted, the current directory will be used.<r/>
				</dd>
				<r/>
				<dt><kw>title</kw></dt>
				<dd>
					　Displays the title of the dialog box.<r/>
					　If omitted, it defaults to "open" or "save as" (depending on the settings of the save member).
				</dd>
				<r/>
				<dt><kw>save</kw></dt>
				<dd>
					　Specify the type of dialog box.<r/>
					　If false (default), the "Open" dialog box will be used.<r/>
					　If true, the "Save As" dialog box is used.<r/>
				</dd>
				<r/>
				<dt><kw>defaultExt</kw></dt>
				<dd>
					　Specify the default extension. This extension is automatically added when the user does not specify an extension. Do not specify. (Period) for the extension specified here.<r/>
					　If omitted, no extension is added.<r/>
				</dd>
				</dl>
			</desc>
		</argitem>
	</arg>
	<result>If the user selects a file and presses the OK button, true is returned, and if the user presses the cancel button, false is returned.</result>
	<desc>
		　Opens a file selection dialog box.<r/>
		<example>
var params = %[<r/>
filter : [ "Text file (*.txt)|*.txt", "Binary file (*.bin)|*.bin" ],<r/>
filterIndex : 1,<r/>
name : "",<r/>
initialDir : System.exePath,<r/>
title : "Open a file",<r/>
save : false,<r/>
];<r/>
if(Storages.selectFile(params))<r/>
System.inform("The selected file is : " + params.name);<r/>
		</example>
	</desc>
</member>



</doc>
